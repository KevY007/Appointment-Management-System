@model AMS.Patient

@{
    ViewBag.Title = "EditPatient";
    Layout = "~/Views/DefaultLayout.cshtml";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Patients / </span> Edit Patient</h4>

    <!-- Basic Layout -->
    <div class="row">
        <div class="col-xl">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">@((string)((Patient)(ViewBag.Patient)).Name)</h5>
                    <small class="text-muted float-end">ID: @((int)((Patient)(ViewBag.Patient)).Id)</small>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        HtmlHelper.ClientValidationEnabled = true;
                        HtmlHelper.UnobtrusiveJavaScriptEnabled = true;

                        @Html.AntiForgeryToken()


                        <div class="mb-3">
                            @Html.LabelFor(model => model.Name, labelText: "Patient Name", htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = ((Patient)(ViewBag.Patient)).Name, @Value = ((Patient)(ViewBag.Patient)).Name } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3 form-password-toggle">
                            @Html.LabelFor(model => model.Password, labelText: "Password", htmlAttributes: new { @class = "form-label" })
                            <div class="input-group input-group-merge">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = ((Patient)(ViewBag.Patient)).Password, @Value = ((Patient)(ViewBag.Patient)).Password, @aria_describedby = "password" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                <span class="input-group-text cursor-pointer"><i class="bx bx-hide"></i></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Gender, labelText: "Gender", htmlAttributes: new { @class = "form-label" })
                            @Html.EnumDropDownListFor(model => model.Gender, new { @class = "select2 form-select" })
                            @Html.ValidationMessageFor(model => model.Gender)
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Email, labelText: "Email", htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = ((Patient)(ViewBag.Patient)).Email, @Value = ((Patient)(ViewBag.Patient)).Email } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Address, labelText: "Address", htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = ((Patient)(ViewBag.Patient)).Address, @Value = ((Patient)(ViewBag.Patient)).Address } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Phone, labelText: "Phone Number", htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = ((Patient)(ViewBag.Patient)).Phone, @Value = ((Patient)(ViewBag.Patient)).Phone } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                        <br />

                        <p class="text-center text-danger">@ViewBag.Error</p>
                        @Html.ValidationSummary(true, "", new { @class = "text-center text-danger" })

                        <input type="submit" value="Confirm Changes" class="btn btn-primary" />
                    }
                </div>
            </div>
        </div>
    </div>
</div>